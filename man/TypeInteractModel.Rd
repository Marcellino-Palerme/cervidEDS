% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\docType{data}
\name{TypeInteractModel}
\alias{TypeInteractModel}
\title{TypeInteractModel class}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
TypeInteractModel
}
\description{
Define interaction of all types with others
}
\section{methods}{

\itemize{
\item{TypeInteractModel$new(typeinteracts)}{
\describe{Create typeinteracts object
\itemize{
\item{typeinteracts}{(list of TypeInteract) list of TypeInteract }
}}}
\item{$get_model()}{
\describe{Give model of interaction
\itemize{
\item{(list of TypeInteract)}{ list of TypeInteract }
}}}
\item{$get_id_typeinteract()}{
\describe{Give id of all host type
\itemize{
\item{(list of integer)}{ list of all host type}
}}}
\item{$get_typeinteract(id)}{
\describe{Give TypeInteract for one host type
\itemize{
\item{id}{ (integer) id of host type}
\item{(TypeInteract)}{ TypeInteract of host type}
}}}
\item{$get_id_interacts(id)}{
\describe{Give the list of id of neightbour type of a host type
\itemize{
\item{id}{ (integer) id of host type}
\item{(list of integer)}{ list of id of neightbour type of a host type}
}}}
\item{$get_name(id)}{
\describe{Give name of host type
\itemize{
\item{id}{ (integer) id of host type}
\item{(character)}{ name of host type}
}}}
\item{$get_interact(id_a, id_b)}{
\describe{Give interact of type B on type A
\itemize{
\item{id_a}{ (integer) id of type A}
\item{id_b}{ (integer) id of type B}
\item{(Interact)}{ Interaction B on A}
}}}
\item{$get_typeinteract(id)}{
\describe{Give agglomeration function of host type 
\itemize{
\item{id}{ (integer) id of host type}
\item{(function)}{ function of agglomeration}
}}}
\item{$get_func_interact(id_a, id_b)}{
\describe{Give interaction function of type B on type A
\itemize{
\item{id_a}{ (integer) id of type A}
\item{id_b}{ (integer) id of type B}
\item{(function)}{ interaction function of type B on type A}
}}}
\item{$get_params(id_a, id_b)}{
\describe{Give parameters of interaction function of type B on type A
\itemize{
\item{id_a}{ (integer) id of type A}
\item{id_b}{ (integer) id of type B}
\item{(list)}{ list of constant parameters of intraction function of 
               type B on type A}
}}}
\item{$set_type_interact(typeinterat)}{
\describe{Add or modify a TypeInteract to model
\itemize{
\item{typeinterat}{ (TypeInteract) Interact of other neightbour type on 
                    one host}
\item{(integer)}{ 0: success, 1: fail}
}}}
\item{$set_func_agglo(id, func_agglo)}{
\describe{modify agglomeration function for one host type
\itemize{
\item{id}{ (integer) identifiant of host type}
\item{func_agglo}{ (function) function of agglomeration}
}}}
\item{$set_interact(id, interact)}{
\describe{Add or modify a Interact for one host type
\itemize{
\item{id}{(integer) identifiant of host type}
\item{interact}{(Interact) interaction}
}}}
\item{$set_func_interact(id_a, id_b, func)}{
\describe{Modify interaction function of type B on type A
\itemize{
\item{id_a}{(integer) identifiant of type A}
\item{id_b}{(integer) identifiant of type B}
\item{func}{(function) interaction function}
\item{(integer)}{ 0: success, 1: fail}
}}}
\item{$set_params(id_a, id_b, params)}{
\describe{Modify parameters of interaction function of type B on type A
\itemize{
\item{id_a}{(integer) identifiant of type A}
\item{id_b}{(integer) identifiant of type B}
\item{params}{(list) parameters of interaction function}
\item{(integer)}{ 0: success, 1: fail}
}}}
\item{$remove_type_interact(id)}{
\describe{remove all interction of neightbour type on host type
\itemize{
\item{id}{(integer) identifiant of host type}
\item{(integer)}{ 0: success, 1: fail}
}}}
\item{$remove_interact(id_a, id_b)}{
\describe{Remove a interaction of type B on type A
\itemize{
\item{id_a}{(integer) identifiant of type A}
\item{id_b}{(integer) identifiant of type B}
\item{(integer)}{ 0: success, 1: fail}
}}}
}
}

\keyword{datasets}
